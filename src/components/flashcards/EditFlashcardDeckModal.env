// import React, { useState, useEffect } from 'react';
// import { Modal } from '@/components/shared/Modal';
// import { Button } from '@/components/ui/button';
// import { Input } from '@/components/ui/input';
// import { Textarea } from '@/components/ui/textarea';
// import { Label } from '@/components/ui/label';
// import { FlashcardDeck } from '@/types/flashcard';

// interface EditFlashcardDeckModalProps {
//   isOpen: boolean;
//   onClose: () => void;
//   deckToEdit: FlashcardDeck | null;
//   onSave: (deck: FlashcardDeck) => void;
//   isSaving: boolean;
// }

// const EditFlashcardDeckModal: React.FC<EditFlashcardDeckModalProps> = ({
//   isOpen,
//   onClose,
//   deckToEdit,
//   onSave,
//   isSaving,
// }) => {
//   const [title, setTitle] = useState('');
//   const [description, setDescription] = useState('');

//   useEffect(() => {
//     if (deckToEdit) {
//       setTitle(deckToEdit.title);
//       setDescription(deckToEdit.description || '');
//     }
//   }, [deckToEdit]);

//   const handleSubmit = (e: React.FormEvent) => {
//     e.preventDefault();
//     if (!title.trim()) {
//       alert('Title cannot be empty.');
//       return;
//     }
//     if (deckToEdit) {
//       onSave({ ...deckToEdit, title, description });
//     }
//   };

//   return (
//     <Modal isOpen={isOpen} onClose={onClose} title="Edit Flashcard Deck">
//       <form onSubmit={handleSubmit} className="space-y-4">
//         <div>
//           <Label htmlFor="edit-title">Title</Label>
//           <Input
//             id="edit-title"
//             value={title}
//             onChange={(e) => setTitle(e.target.value)}
//             placeholder="e.g., Biology - Chapter 1"
//             required
//           />
//         </div>
//         <div>
//           <Label htmlFor="edit-description">Description (Optional)</Label>
//           <Textarea
//             id="edit-description"
//             value={description}
//             onChange={(e) => setDescription(e.target.value)}
//             placeholder="Brief description of the deck"
//             rows={3}
//           />
//         </div>
//         <div className="flex justify-end space-x-2">
//           <Button type="button" variant="outline" onClick={onClose} disabled={isSaving}>
//             Cancel
//           </Button>
//           <Button type="submit" disabled={isSaving}>
//             {isSaving ? 'Saving...' : 'Save Changes'}
//           </Button>
//         </div>
//       </form>
//     </Modal>
//   );
// };

// export default EditFlashcardDeckModal;