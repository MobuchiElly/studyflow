// import React from 'react';
// import { Flashcard } from '@/types/flashcard';
// import { Button } from '@/components/ui/button';
// import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
// import { Edit, Trash2 } from 'lucide-react';

// interface FlashcardListProps {
//   flashcards: Flashcard[];
//   onEdit: (flashcard: Flashcard) => void;
//   onDelete: (id: string) => void;
//   isDeleting: string | null;
// }

// const FlashcardList: React.FC<FlashcardListProps> = ({ flashcards, onEdit, onDelete, isDeleting }) => {
//   if (flashcards.length === 0) {
//     return (
//       <div className="text-center text-muted-foreground py-10">
//         <p>No flashcards in this deck yet. Add some to start learning!</p>
//       </div>
//     );
//   }

//   return (
//     <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
//       {flashcards.map((flashcard) => (
//         <Card key={flashcard.id} className="flex flex-col">
//           <CardHeader>
//             <CardTitle className="text-lg font-semibold">{flashcard.question}</CardTitle>
//           </CardHeader>
//           <CardContent className="flex-grow">
//             <p className="text-muted-foreground">{flashcard.answer}</p>
//           </CardContent>
//           <div className="p-4 border-t flex justify-end space-x-2">
//             <Button variant="outline" size="sm" onClick={() => onEdit(flashcard)}>
//               <Edit className="w-4 h-4 mr-2" />
//               Edit
//             </Button>
//             <Button
//               variant="destructive"
//               size="sm"
//               onClick={() => onDelete(flashcard.id)}
//               disabled={isDeleting === flashcard.id}
//             >
//               {isDeleting === flashcard.id ? 'Deleting...' : <Trash2 className="w-4 h-4 mr-2" />}
//               {isDeleting === flashcard.id ? '' : 'Delete'}
//             </Button>
//           </div>
//         </Card>
//       ))}
//     </div>
//   );
// };

// export default FlashcardList;