// 'use client';

// import React, { useState, useEffect, useCallback } from 'react';
// import axios from 'axios';
// import { toast } from 'sonner';
// import { Quiz } from '@/types/quiz';
// import { QuizHeader } from '@/components/quizzes/QuizHeader';
// import { QuizList } from '@/components/quizzes/QuizList';
// import { CreateQuizModal } from '@/components/quizzes/CreateQuizModal';
// import { EditQuizModal } from '@/components/quizzes/EditQuizModal';
// import { DeleteQuizDialog } from '@/components/quizzes/DeleteQuizDialog';

// export default function QuizzesPage() {
//   const [quizzes, setQuizzes] = useState<Quiz[]>([]);
//   const [isLoading, setIsLoading] = useState(true);
//   const [error, setError] = useState<string | null>(null);

//   const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);
//   const [isEditModalOpen, setIsEditModalOpen] = useState(false);
//   const [isDeleteDialogOpen, setIsDeleteDialogOpen] = useState(false);

//   const [selectedQuiz, setSelectedQuiz] = useState<Quiz | null>(null);
//   const [isDeleting, setIsDeleting] = useState(false);

//   const fetchQuizzes = useCallback(async () => {
//     setIsLoading(true);
//     setError(null);
//     try {
//       const response = await axios.get('/api/quizzes');
//       setQuizzes(response.data);
//     } catch (err) {
//       console.error('Failed to fetch quizzes:', err);
//       setError('Failed to load quizzes. Please try again.');
//       toast.error('Failed to load quizzes.');
//     } finally {
//       setIsLoading(false);
//     }
//   }, []);

//   useEffect(() => {
//     fetchQuizzes();
//   }, [fetchQuizzes]);

//   const handleCreateQuiz = async (title: string, quizType: 'manual' | 'ai_generated') => {
//     try {
//       const response = await axios.post('/api/quizzes', { title, quizType });
//       setQuizzes((prev) => [...prev, response.data]);
//       toast.success('Quiz created successfully!');
//       setIsCreateModalOpen(false);
//     } catch (err) {
//       console.error('Failed to create quiz:', err);
//       toast.error('Failed to create quiz.');
//     }
//   };

//   const handleEditQuiz = async (id: string, title: string, quizType: 'manual' | 'ai_generated') => {
//     if (!selectedQuiz) return;
//     try {
//       const response = await axios.put(`/api/quizzes/${id}`, { title, quizType });
//       setQuizzes((prev) => prev.map((quiz) => (quiz.id === id ? response.data : quiz)));
//       toast.success('Quiz updated successfully!');
//       setIsEditModalOpen(false);
//       setSelectedQuiz(null);
//     } catch (err) {
//       console.error('Failed to update quiz:', err);
//       toast.error('Failed to update quiz.');
//     }
//   };

//   const handleDeleteQuiz = async () => {
//     if (!selectedQuiz) return;
//     setIsDeleting(true);
//     try {
//       await axios.delete(`/api/quizzes/${selectedQuiz.id}`);
//       setQuizzes((prev) => prev.filter((quiz) => quiz.id !== selectedQuiz.id));
//       toast.success('Quiz deleted successfully!');
//       setIsDeleteDialogOpen(false);
//       setSelectedQuiz(null);
//     } catch (err) {
//       console.error('Failed to delete quiz:', err);
//       toast.error('Failed to delete quiz.');
//     } finally {
//       setIsDeleting(false);
//     }
//   };

//   const openEditModal = (quiz: Quiz) => {
//     setSelectedQuiz(quiz);
//     setIsEditModalOpen(true);
//   };

//   const openDeleteDialog = (quiz: Quiz) => {
//     setSelectedQuiz(quiz);
//     setIsDeleteDialogOpen(true);
//   };

//   return (
//     <div className="container mx-auto py-8">
//       <QuizHeader onOpenCreateModal={() => setIsCreateModalOpen(true)} />

//       {isLoading ? (
//         <p className="text-center text-gray-500">Loading quizzes...</p>
//       ) : error ? (
//         <p className="text-center text-red-500">{error}</p>
//       ) : quizzes.length === 0 ? (
//         <p className="text-center text-gray-500">No quizzes found. Create one to get started!</p>
//       ) : (
//         <QuizList
//           quizzes={quizzes}
//           onEdit={openEditModal}
//           onDelete={openDeleteDialog}
//         />
//       )}

//       <CreateQuizModal
//         isOpen={isCreateModalOpen}
//         onClose={() => setIsCreateModalOpen(false)}
//         onCreate={handleCreateQuiz}
//       />

//       {selectedQuiz && (
//         <EditQuizModal
//           isOpen={isEditModalOpen}
//           onClose={() => {
//             setIsEditModalOpen(false);
//             setSelectedQuiz(null);
//           }}
//           onSave={handleEditQuiz}
//           quiz={selectedQuiz}
//         />
//       )}

//       {selectedQuiz && (
//         <DeleteQuizDialog
//           isOpen={isDeleteDialogOpen}
//           onClose={() => {
//             setIsDeleteDialogOpen(false);
//             setSelectedQuiz(null);
//           }}
//           onConfirm={handleDeleteQuiz}
//           isDeleting={isDeleting}
//         />
//       )}
//     </div>
//   );
// }