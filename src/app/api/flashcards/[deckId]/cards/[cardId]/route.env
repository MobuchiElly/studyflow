// import { NextResponse } from 'next/server';
// import { createClient } from '@/lib/supabase/supabase';
// import { z } from 'zod';

// // Schema for updating a flashcard
// const flashcardUpdateSchema = z.object({
//   question: z.string().min(1, 'Question is required').optional(),
//   answer: z.string().min(1, 'Answer is required').optional(),
// });

// export async function GET(request: Request, { params }: { params: { deckId: string, cardId: string } }) {
//   const supabase = createClient();
//   const { data: { user } } = await supabase.auth.getUser();

//   if (!user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   const { deckId, cardId } = params;

//   const { data, error } = await supabase
//     .from('flashcards')
//     .select('*')
//     .eq('id', cardId)
//     .eq('deck_id', deckId)
//     .eq('user_id', user.id)
//     .single();

//   if (error) {
//     console.error('Error fetching flashcard:', error);
//     return NextResponse.json({ error: error.message }, { status: 500 });
//   }

//   if (!data) {
//     return NextResponse.json({ error: 'Flashcard not found' }, { status: 404 });
//   }

//   return NextResponse.json(data);
// }

// export async function PUT(request: Request, { params }: { params: { deckId: string, cardId: string } }) {
//   const supabase = createClient();
//   const { data: { user } } = await supabase.auth.getUser();

//   if (!user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   const { deckId, cardId } = params;

//   try {
//     const body = await request.json();
//     const validatedData = flashcardUpdateSchema.parse(body);

//     const { data, error } = await supabase
//       .from('flashcards')
//       .update(validatedData)
//       .eq('id', cardId)
//       .eq('deck_id', deckId)
//       .eq('user_id', user.id)
//       .select()
//       .single();

//     if (error) {
//       console.error('Error updating flashcard:', error);
//       return NextResponse.json({ error: error.message }, { status: 500 });
//     }

//     if (!data) {
//       return NextResponse.json({ error: 'Flashcard not found or unauthorized' }, { status: 404 });
//     }

//     return NextResponse.json(data);
//   } catch (error) {
//     if (error instanceof z.ZodError) {
//       return NextResponse.json({ error: error.errors }, { status: 400 });
//     }
//     console.error('Unexpected error updating flashcard:', error);
//     return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
//   }
// }

// export async function DELETE(request: Request, { params }: { params: { deckId: string, cardId: string } }) {
//   const supabase = createClient();
//   const { data: { user } } = await supabase.auth.getUser();

//   if (!user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   const { deckId, cardId } = params;

//   const { error } = await supabase
//     .from('flashcards')
//     .delete()
//     .eq('id', cardId)
//     .eq('deck_id', deckId)
//     .eq('user_id', user.id);

//   if (error) {
//     console.error('Error deleting flashcard:', error);
//     return NextResponse.json({ error: error.message }, { status: 500 });
//   }

//   return NextResponse.json({ message: 'Flashcard deleted successfully' }, { status: 200 });
// }