// import { NextResponse } from 'next/server';
// import { createClient } from '@/lib/supabase/supabase';
// import { z } from 'zod';

// // Schema for creating a new flashcard deck
// const flashcardDeckSchema = z.object({
//   title: z.string().min(1, 'Title is required'),
//   description: z.string().optional(),
// });

// export async function GET(request: Request) {
//   const supabase = createClient();
//   const { data: { user } } = await supabase.auth.getUser();

//   if (!user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   const { data, error } = await supabase
//     .from('flashcard_decks')
//     .select('*')
//     .eq('user_id', user.id);

//   if (error) {
//     console.error('Error fetching flashcard decks:', error);
//     return NextResponse.json({ error: error.message }, { status: 500 });
//   }

//   return NextResponse.json(data);
// }

// export async function POST(request: Request) {
//   const supabase = createClient();
//   const { data: { user } } = await supabase.auth.getUser();

//   if (!user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   try {
//     const body = await request.json();
//     const { title, description } = flashcardDeckSchema.parse(body);

//     const { data, error } = await supabase
//       .from('flashcard_decks')
//       .insert({ user_id: user.id, title, description })
//       .select()
//       .single();

//     if (error) {
//       console.error('Error creating flashcard deck:', error);
//       return NextResponse.json({ error: error.message }, { status: 500 });
//     }

//     return NextResponse.json(data, { status: 201 });
//   } catch (error) {
//     if (error instanceof z.ZodError) {
//       return NextResponse.json({ error: error.errors }, { status: 400 });
//     }
//     console.error('Unexpected error creating flashcard deck:', error);
//     return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
//   }
// }