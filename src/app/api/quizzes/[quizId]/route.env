// import { NextResponse } from 'next/server';
// import { createClient } from '@/lib/supabase/supabase';
// import { z } from 'zod';

// // Schema for updating a quiz
// const quizUpdateSchema = z.object({
//   title: z.string().min(1, 'Title is required').optional(),
//   description: z.string().optional(),
//   quiz_type: z.enum(['manual', 'ai_generated']).optional(),
//   questions: z.array(
//     z.object({
//       id: z.string().optional(), // ID is optional for new questions within an update
//       question_text: z.string().min(1, 'Question text is required'),
//       options: z.array(z.string()).min(2, 'At least two options are required'),
//       correct_answer: z.string().min(1, 'Correct answer is required'),
//       explanation: z.string().optional(),
//     })
//   ).optional(),
// });

// export async function GET(
//   request: Request,
//   { params }: { params: { quizId: string } }
// ) {
//   const { quizId } = params;
//   const supabase = createClient();
//   const { data: userData, error: userError } = await supabase.auth.getUser();

//   if (userError || !userData?.user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   const { data: quiz, error } = await supabase
//     .from('quizzes')
//     .select('*')
//     .eq('id', quizId)
//     .eq('user_id', userData.user.id)
//     .single();

//   if (error) {
//     console.error('Error fetching quiz:', error);
//     if (error.code === 'PGRST116') { // No rows found
//       return NextResponse.json({ error: 'Quiz not found' }, { status: 404 });
//     }
//     return NextResponse.json({ error: error.message }, { status: 500 });
//   }

//   return NextResponse.json(quiz, { status: 200 });
// }

// export async function PUT(
//   request: Request,
//   { params }: { params: { quizId: string } }
// ) {
//   const { quizId } = params;
//   const supabase = createClient();
//   const { data: userData, error: userError } = await supabase.auth.getUser();

//   if (userError || !userData?.user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   try {
//     const body = await request.json();
//     const validatedData = quizUpdateSchema.parse(body);

//     const { data, error } = await supabase
//       .from('quizzes')
//       .update(validatedData)
//       .eq('id', quizId)
//       .eq('user_id', userData.user.id)
//       .select()
//       .single();

//     if (error) {
//       console.error('Error updating quiz:', error);
//       if (error.code === 'PGRST116') { // No rows found
//         return NextResponse.json({ error: 'Quiz not found or unauthorized' }, { status: 404 });
//       }
//       return NextResponse.json({ error: error.message }, { status: 500 });
//     }

//     return NextResponse.json(data, { status: 200 });
//   } catch (error) {
//     if (error instanceof z.ZodError) {
//       return NextResponse.json({ error: error.errors }, { status: 400 });
//     }
//     console.error('Unexpected error updating quiz:', error);
//     return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
//   }
// }

// export async function DELETE(
//   request: Request,
//   { params }: { params: { quizId: string } }
// ) {
//   const { quizId } = params;
//   const supabase = createClient();
//   const { data: userData, error: userError } = await supabase.auth.getUser();

//   if (userError || !userData?.user) {
//     return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });
//   }

//   const { error } = await supabase
//     .from('quizzes')
//     .delete()
//     .eq('id', quizId)
//     .eq('user_id', userData.user.id);

//   if (error) {
//     console.error('Error deleting quiz:', error);
//     if (error.code === 'PGRST116') { // No rows found
//       return NextResponse.json({ error: 'Quiz not found or unauthorized' }, { status: 404 });
//     }
//     return NextResponse.json({ error: error.message }, { status: 500 });
//   }

//   return NextResponse.json({ message: 'Quiz deleted successfully' }, { status: 200 });
// }